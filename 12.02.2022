/*
Fie un cuvânt format din n caractere.
Să se facă un meniu interactiv care să conţină următoarele operaţii:
0. Ieșire
1. Citirea caracterelor cuvântului de la tastatură.
Observații:
• Se va valida fiecare element citit, astfel încât acesta să fie literă mică sau cifră sau caracterul ‘-’.
• Ultimele două caractere ce compun cuvântul sunt date automat fiind egale cu primul caracter respectiv
al doilea caracter. Exemplu: cuvântul abcdefab respectă regula.
2. Să se afișeze toate caracterele care apar de mai multe ori în cuvânt..
3. Să se sorteze descrescător caracterele cuvântului, apoi acesta să se afișeze pe ecran.
*/

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int validare(char ch)
{
	//• acesta să fie literă mică sau cifră sau caracterul ‘-’.
	if ((ch >= 'a' && ch <= 'z')||(ch >= '0' && ch <= '9')||(ch == '-'))
		return 1;
	return 0;
}

void citire(char* C, int n)
{
	//• Ultimele două caractere sunt egale cu primele doua
	//	Exemplu: cuvântul abcdefab respectă regula.

	int i;
	for (i = 0; i < n - 2; ++i)
	{
		do
		{
			printf("car[%d]= ", i);
			scanf(" %c", &C[i]);
		} while (!validare(C[i]));
	}
	C[n - 1] = C[0];
	C[n - 2] = C[1];
}

void afisare_repetate(char* C, int n)
{
	int i, j;
	char* sir;
	char aux;
	int afisam = 0;
	sir = (char*)calloc(n, sizeof(char));
	strcpy(sir, C);
	// 0 1 2 3 4 5
	// 1 2 3 4 5 6
	for (i = 0; i < n - 1; ++i)
	{
		for (j = 0; j < n - 1 - i; ++j)
		{
			if (sir[j] > sir[j + 1])
			{
				aux = sir[j];
				sir[j] = sir[j + 1];
				sir[j + 1] = aux;
			}
		}
	}
	// abecedarab
	// aaabbcdeer
	for (i = 0; i < n-1; ++i)
	{
		if (sir[i] == sir[i + 1])
		{
			afisam = 1;
		}
		else
		{
			if (afisam)
			{
				afisam = 0;
				printf("%c ", sir[i]);
			}
		}
	}
}

void afisare_desc(char* C, int n)
{
	printf("\n");
	int i, j;
	char aux;
	for (i = 0; i < n - 1; ++i)
	{
		for (j = 0; j < n - 1 - i; ++j)
		{
			if (C[j] < C[j + 1])
			{
				aux = C[j];
				C[j] = C[j + 1];
				C[j + 1] = aux;
			}
		}
	}
	for (i = 0; i < n; ++i)
	{
		printf("%c", C[i]);
	}
	printf("\n");
}
int main()
{
	int n, opt;
	char* cuv;

	printf("Introduceti numarul de elemente (n>2): ");
	scanf("%d", &n);
	cuv = (char*)malloc(n * sizeof(char));

	while (1) {
		printf(
		    "\n0.Iesire\n"
		    "1. Citirea cuvantului\n"
		    "2. Toate caracterele care apar mai multe ori\n"
		    "3. Sorteze descrescator\n"
		);
		printf("Introduceti optiunea: ");
		scanf("%d", &opt);

		switch (opt) {
		case 0:
			printf("\nProgram finished succesfully!\n");
			exit(0);
			break;
		case 1:
			citire(cuv, n);
			break;
		case 2:
			afisare_repetate(cuv, n);
			break;
		case 3:
			afisare_desc(cuv, n);
			break;
		default:
			printf("\nOptiunea gresita!\n");
			break;
		}
	}
	return 0;
}
