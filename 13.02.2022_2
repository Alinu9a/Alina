/*
Fie o mulțime A de n numere întregi.
Să se facă un meniu interactiv care să conțină următoarele operații:
0. Ieșire
1. Citirea elementelor mulțimii A de la tastatură.
Observații:
• Ultimele două elemente ale mulțimii sunt date automat, fiind egale cu suma, respectiv produsul
elementelor citite până în acel moment. Exemplu: dacă mulțimea are 6 elemente, iar primele 4 sunt:
2, 7, 1, 0; atunci penultimul element este 10, iar ultimul este 2*7*1*10 = 140. Elementele egale cu 0
nu vor fii luate în considerare în calcularea produsului.
• Elementele mulțimilor sunt cuprinse în intervalul [0; 500].
2. Să se afișeze elementele vectorului care apar de mai multe ori în vector.
3. Să se afișeze toate elementele vectorului care sunt mai mari cu 3 decât o putere a lui 2. Se vor utiliza
operații pe biți în transformare.
*/

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int validare(int nr)
{
	// intre [0;500]

	if (nr >= 0 && nr <= 500)
		return 1;
	return 0;
}

void citire(int* A, int n)
{
	printf("\n");
	int i;
	int s = 0;
	int p = 1;
	for (i = 0; i < n - 2; ++i)
	{
		do
		{
			printf("arr[%d]= ", i);
			scanf("%d", &A[i]);
		} while (!validare(A[i]));
		if (A[i] != 0)
		{
			s += A[i];
			p *= A[i];
		}
	}
	A[n - 1] = p;
	A[n - 2] = s;
	printf("\n");
}
void afisare_repetate(int* A, int n)
{
	printf("\n");
	int i, j;
	int aux;
	int afisare = 0;
	for (i = 0; i < n - 1; ++i)
	{
		for (j = 0; j < n - 1 - i; ++j)
		{
			if (A[j] > A[j + 1])
			{
				aux = A[j];
				A[j] = A[j + 1];
				A[j + 1] = aux;
			}
		}
	}
	for (i = 0; i < n - 1; ++i) ///3 3 4 4 5 6
	{
		if (A[i] == A[i + 1])
		{
			afisare = 1;
		}
		else
		{
			if (afisare)
			{
				printf("%d ", A[i]);
				afisare = 0;
			}
		}
	}
	printf("\n");
}
int putdoi(int nr)
{
	if(!(nr&(nr-1)))
		return 1;
	return 0;
}
void put_doi(int* A, int n)
{
	printf("\n");
	int i;
	for (i = 0; i < n; ++i)
	{
		if(putdoi(A[i]-3))
			printf("%d ", A[i]);
	}
	printf("\n");
}

int main()
{
	int n, opt;
	int* arr;

	printf("Introduceti numarul de elemente: ");
	scanf("%d", &n);
	arr = (int*)calloc(n, sizeof(int));


	while (1) {
		printf(
		    "\n0.Iesire\n"
		    "1. Citirea elementelor mulțimii A de la tastatură.\n"
		    "2. Să se afișeze elementele vectorului care apar de mai multe ori în vector.\n"
		    "3. Să se afișeze toate elementele vectorului care sunt mai mari cu 3 decât o putere a lui 2.\n"
		);
		printf("Introduceti optiunea: ");
		scanf("%d", &opt);

		switch (opt) {
		case 0:
			printf("\nProgram finished succesfully!\n");
			exit(0);
			break;
		case 1:
			citire(arr, n);
			break;
		case 2:
			afisare_repetate(arr, n);
			break;
		case 3:
			put_doi(arr, n);
			break;
		default:
			printf("\nOptiunea gresita!\n");
			break;
		}
	}
	return 0;
}
